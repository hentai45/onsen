// Generated by mkhdr

#ifndef HEADER_TASK
#define HEADER_TASK

#include <stdbool.h>
#include "file.h"

#define ERROR_PID        (-1)

#define TASK_MAX         (32)  ///< 最大タスク数
#define FILE_TABLE_SIZE  (16)


extern int g_root_pid;
extern int g_idle_pid;
extern int g_dbg_pid;
extern int g_con_pid;
extern int g_world_pid;


void task_init(void);
int  task_new(char *name);
int  task_free(int pid, int exit_status);
void task_run(int pid, int timeslice_ms);
int  task_run_app(void *p, unsigned int size, const char *name);
void task_switch(int ts_tid);
void task_sleep(int pid);
void task_wakeup(int pid);
int  get_pid(void);
const char *task_get_name(int pid);
void task_set_pt(int i_pd, unsigned long pt);

void task_dbg(void);

int get_free_fd(void);
FILE_T *task_get_file(int fd);
int task_set_file(int fd, FILE_T *f);

int is_os_task(int pid);


#endif
