// Generated by mkhdr

#ifndef HEADER_GRAPHIC
#define HEADER_GRAPHIC

#define ERROR_SID  -1

#define RGB(R, G, B) ((unsigned short) (((R) & 0xF8) << 8) | (((G) & 0xFC) << 3) | (((B) & 0xF8) >> 3))

#define GET_RED(RGB)   (((RGB) & 0xF800) >> 8)
#define GET_GREEN(RGB) (((RGB) & 0x07E0) >> 3)
#define GET_BLUE(RGB)  (((RGB) & 0x001F) << 3)

#define COL_BLACK    RGB(  0,   0,   0)
#define COL_RED      RGB(255,   0,   0)
#define COL_GREEN    RGB(  0, 255,   0)
#define COL_BLUE     RGB(  0,   0, 255)
#define COL_WHITE    RGB(255, 255, 255)


enum {
    OP_SRC_COPY,
    OP_SRC_INVERT
};


extern int g_vram_sid;
extern int g_dbg_sid;
extern int g_con_sid;
extern int g_world_sid;

extern const int g_w;
extern const int g_h;


void graphic_init(unsigned short *vram);

int  surface_new(int w, int h);
int  surface_new_from_buf(int w, int h, unsigned short *buf);
void surface_free(int sid);
void surface_task_free(int pid);
int  get_screen(void);

void set_sprite_pos(int sid, int x, int y);
void move_sprite(int sid, int dx, int dy);

void update_screen(int sid);
void update_rect(int sid, int x, int y, int w, int h);

void draw_sprite(int src_sid, int dst_sid, int op);
void blit_surface(int src_sid, int src_x, int src_y, int w, int h,
        int dst_sid, int dst_x, int dst_y, int op);

void fill_surface(int sid, unsigned short color);
void fill_rect(int sid, int x, int y, int w, int h,
        unsigned short color);
void draw_text(int sid, int x, int y, unsigned short color,
        const char *text);
void draw_text_bg(int sid, int x, int y, unsigned short color,
        unsigned short bg_color, const char *text);

void draw_pixel(int sid, unsigned int x, unsigned int y, unsigned short color);

void scroll_surface(int sid, int cx, int cy);

void set_colorkey(int sid, unsigned short colorkey);
void clear_colorkey(int sid);
void set_alpha(int sid, unsigned char alpha);
void clear_alpha(int sid);

void set_mouse_pos(int x, int y);

int get_screen_pid(void);
void switch_screen(void);
void switch_debug_screen(void);

void graphic_dbg(void);

#endif
